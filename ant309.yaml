AWSTemplateFormatVersion: 2010-09-09
Description: EMR Serverless Application stack

Resources:
  TestSparkApplication:
    Type: AWS::EMRServerless::Application
    Properties:
      Name: spark-3.2
      ReleaseLabel: emr-6.7.0
      Type: Spark
      MaximumCapacity:
        Cpu: 200 vCPU
        Memory: 100 GB
      AutoStartConfiguration:
        Enabled: true
      AutoStopConfiguration:
        Enabled: true
        IdleTimeoutMinutes: 100
      InitialCapacity:
        - Key: Driver
          Value:
            WorkerCount: 3
            WorkerConfiguration:
              Cpu: 2 vCPU
              Memory: 4 GB
              Disk: 21 GB
        - Key: Executor
          Value:
            WorkerCount: 4
            WorkerConfiguration:
              Cpu: 1 vCPU
              Memory: 4 GB
              Disk: 20 GB
      Name: ant309-test
      Tags:
        - Key: tag-on-create-key
          Value: tag-on-create-value
  
  ProdSparkApplication:
    Type: AWS::EMRServerless::Application
    Properties:
      Name: spark-3.2
      ReleaseLabel: emr-6.7.0
      Type: Spark
      MaximumCapacity:
        Cpu: 200 vCPU
        Memory: 100 GB
      AutoStartConfiguration:
        Enabled: true
      AutoStopConfiguration:
        Enabled: true
        IdleTimeoutMinutes: 100
      InitialCapacity:
        - Key: Driver
          Value:
            WorkerCount: 3
            WorkerConfiguration:
              Cpu: 2 vCPU
              Memory: 4 GB
              Disk: 21 GB
        - Key: Executor
          Value:
            WorkerCount: 4
            WorkerConfiguration:
              Cpu: 1 vCPU
              Memory: 4 GB
              Disk: 20 GB
      Name: ant309-prod
      Tags:
        - Key: tag-on-create-key
          Value: tag-on-create-value

  TestBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'ant309-test-${AWS::AccountId}'

  ProdBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'ant309-prod-${AWS::AccountId}'

  EMRServerlessJobRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: emr-serverless.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:DeleteObject'
                  - 's3:PutObject'
                Effect: Allow
                Resource:
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - ProdBucket
                        - Arn
                      - /*
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - TestBucket
                        - Arn
                      - /*
            Version: 2012-10-17
          PolicyName: S3Access
        - PolicyDocument:
            Statement:
              - Action:
                  - 'glue:BatchCreatePartition'
                  - 'glue:CreatePartition'
                  - 'glue:CreateTable'
                  - 'glue:GetDataBases'
                  - 'glue:GetDatabase'
                  - 'glue:GetPartition'
                  - 'glue:GetPartitions'
                  - 'glue:GetTable'
                  - 'glue:GetTables'
                  - 'glue:GetUserDefinedFunctions'
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
          PolicyName: GlueAccess
  
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ThumbprintList: [15e29108718111e59b3dad31954647e3c344a231]
      ClientIdList: 
        - sts.amazonaws.com

  GitHubOIDCRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringLike:
                'token.actions.githubusercontent.com:sub': 'repo:GITHUB_USERNAME/*:*'
              'ForAllValues:StringEquals':
                'token.actions.githubusercontent.com:iss': 'https://token.actions.githubusercontent.com'
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
            Effect: Allow
            Principal:
              Federated: !Ref GithubOidc
        Version: 2012-10-17
      Description: >-
        This role is used via GitHub Actions to deploy with AWS CDK or Terraform
        on the target AWS account
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':iam::aws:policy/AmazonEC2ContainerRegistryReadOnly'
      MaxSessionDuration: 3600
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'emr-serverless:DescribeApplication'
                  - 'emr-serverless:GetJobRun'
                  - 'emr-serverless:StartApplication'
                  - 'emr-serverless:StartJobRun'
                Effect: Allow
                Resource:
                  - !GetAtt 
                    - ProdSparkApplication
                    - Arn
                  - !GetAtt 
                    - TestSparkApplication
                    - Arn
              - Action: 'emr-serverless:GetJobRun'
                Effect: Allow
                Resource:
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - ProdSparkApplication
                        - Arn
                      - /jobruns/*
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - TestSparkApplication
                        - Arn
                      - /jobruns/*
              - Action: 'iam:PassRole'
                Condition:
                  StringLike:
                    'iam:PassedToService': emr-serverless.amazonaws.com
                Effect: Allow
                Resource: !GetAtt 
                  - EMRServerlessJobRole
                  - Arn
            Version: 2012-10-17
          PolicyName: EMRServerlessAccess
        - PolicyDocument:
            Statement:
              - Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 's3:DeleteObject'
                  - 's3:PutObject'
                Effect: Allow
                Resource:
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - ProdBucket
                        - Arn
                      - /*
                  - !Join 
                    - ''
                    - - !GetAtt 
                        - TestBucket
                        - Arn
                      - /*
            Version: 2012-10-17
          PolicyName: S3Access


Outputs:
  TestApplicationId:
    Value: !Ref TestSparkApplication
  TestApplicationArn:
    Value: !GetAtt TestSparkApplication.Arn
  ProdApplicationId:
    Value: !Ref ProdSparkApplication
  ProdApplicationArn:
    Value: !GetAtt ProdSparkApplication.Arn
  GitHubOIDCRoleArn:
    Value: !GetAtt GitHubOIDCRole.Arn
  EMRServerlessJobRoleArn:
    Value: !GetAtt EMRServerlessJobRole.Arn
  TestBucketName:
    Value: !Ref TestBucket
  ProdBucketName:
    Value: !Ref ProdBucket
  